########################################################
# configuration file for                               #
# raspi-gpio-mpdc                                      #
########################################################
[GPIO]
#
# General: use pin numbering in BCM format
#
#
# Configure the GPIO input pins connected to buttons
# --------------------------------------------------
#
# ButtonN = input_pin_number,up|dn|upex|dnex,press|release,trigger_event[,bouncetime_ms]
#
# input_pin_number    number of pin a button is connected to
#
# up|dn|upex|dnex     pull resistor configuration
#                       up - use internal pull-up resistor
#                       dn - use internal pull-down resistor
#                       upex, dnex - indicate external pull resistors used
#
# press|release       button event to act on          
#                       press   - trigger event whenever button is pressed
#                       release - trigger event whenever button is released
#
# trigger_event       define the event which is sent to the MPD server, one of:
#                        play_stop  - toggle between play and stop
#                        play_pause - toggle between play and pause
#                        prev       - go to the previous track/stream in list
#                        next       - go to the next track/stream in list
#                        mute       - mute/unmute the output
#                        vol_up     - increase volume
#                        vol_dn     - decrease volume
#
# bouncetime_ms       time span in milliseconds during which subsequent events will be ignored
#
Button0 = 22,upex,press,play_pause,100

#
# Configure GPIO input pins connected to rotary encoders
# ------------------------------------------------------
#
# RotEncN = input_pin_A,input_pin_B,rot_ccw_event,rot_cw_event
#
# input_pin_A,input_pin_B    numbers of input pins connected to rotary encoder
#                            sequence of lo-hi-transitions of these pins determines the
#                            rotation direction
#
# rot_ccw_event              event to trigger when counter-clockwise rotation is detected,
#                            one of the above events for buttons
#
# rot_cw_event               event to trigger when clockwise rotation is detected,
#                            one of the above events for buttons
#
RotEnc0 = 18,19,vol_dn,vol_up

[MPD]
#
# Optional host to connect to (empty/default is localhost)
#
mpdhost = 